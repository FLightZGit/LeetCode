
    /**
     * Definition for singly-linked list.
     * public class ListNode {
     * int val;
     * ListNode next;
     * ListNode() {}
     * ListNode(int val) { this.val = val; }
     * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
     * }
     */
    class Solution {
        public ListNode reverseBetween(ListNode head, int left, int right) {
            if (left == 1) {
                return reverseBeginningNodes(head, right);
            }
            head.next = reverseBetween(head.next, --left, --right);
            return head;                                     
        }

        ListNode successor = null;

        private ListNode reverseBeginningNodes(ListNode head, int right) {
            if (right == 1) {
                successor = head.next;
                return head;
            }
            ListNode last = reverseBeginningNodes(head.next, right - 1);
            head.next.next = head;
            head.next = successor;
            return last;
        }
    }

//runtime:0 ms
//memory:41.7 MB
