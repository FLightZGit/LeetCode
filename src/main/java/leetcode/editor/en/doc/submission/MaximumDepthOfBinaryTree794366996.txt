
    /**
     * Definition for a binary tree node.
     * public class TreeNode {
     * int val;
     * TreeNode left;
     * TreeNode right;
     * TreeNode() {}
     * TreeNode(int val) { this.val = val; }
     * TreeNode(int val, TreeNode left, TreeNode right) {
     * this.val = val;
     * this.left = left;
     * this.right = right;
     * }
     * }
     */
    class Solution {
        public int maxDepth(TreeNode root) {
            return maxDepth(root, 0);
        }

        public int maxDepth(TreeNode root, int depth) {
            int leftDepth = 0, rightDepth = 0;

            if (root == null) {
                return depth;
            }
            leftDepth = maxDepth(root.left, depth + 1);
            rightDepth = maxDepth(root.right, depth + 1);

            return Math.max(leftDepth, rightDepth);
        }
    }

//runtime:0 ms
//memory:43.1 MB
